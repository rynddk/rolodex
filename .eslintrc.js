'use strict';

/* eslint-disable max-lines */

// constants for rules that use numeric options
const COMPLEXITY = 7;
const INDENT = 4;
const ID_LENGTH = 3;
const MAX_FILE_LINES = 300;
const MAX_FUNC_LINES = 50;
const MAX_NESTED_CALLBACKS = 3;
const MAX_PARAMS = 4;

module.exports = {
    root: true,
    env: {
        browser: true,
        es6: true,
        node: true
    },
    plugins: [
        'react'
    ],
    parserOptions: {
        ecmaVersion: 2021,
        ecmaFeatures: {
            jsx: true
        },
        sourceType: "module"
    },
    reportUnusedDisableDirectives: true,
    rules: {
        'accessor-pairs': 'error',
        'array-bracket-newline': ['error', 'consistent'],
        'array-bracket-spacing': ['error', 'never'],
        'array-callback-return': 'error',
        'array-element-newline': ['error', 'consistent'],
        'arrow-body-style': ['error', 'as-needed'],
        'arrow-parens': ['error', 'always'],
        'arrow-spacing': 'error',
        'block-scoped-var': 'error',
        'block-spacing': ['error', 'always'],
        'brace-style': ['error', 'stroustrup', { allowSingleLine: false }],
        'callback-return': 'off',
        'camelcase': ['error', { properties: 'always' }],
        'capitalized-comments': 'off',
        'class-methods-use-this': 'error',
        'comma-dangle': 'error',
        'comma-spacing': ['error', {
            before: false,
            after: true
        }],
        'comma-style': ['error', 'last'],
        'complexity': ['error', COMPLEXITY],
        'computed-property-spacing': ['error', 'never', { enforceForClassMembers: true }],
        'consistent-return': 'off',
        'consistent-this': ['error', 'self'],
        'constructor-super': 'error',
        'curly': 'error',
        'default-case': 'error',
        'default-case-last': 'error',
        'default-param-last': 'error',
        'dot-location': ['error', 'property'],
        'dot-notation': 'error',
        'eol-last': 'error',
        'eqeqeq': 'error',
        'for-direction': 'error',
        'function-call-argument-newline': ['error', 'consistent'],
        'func-call-spacing': 'error',
        'func-name-matching': ['error', { considerPropertyDescriptor: true }],
        'func-names': 'error',
        'func-style': ['error', 'expression'],
        'function-paren-newline': ['error', 'consistent'],
        'generator-star-spacing': 'off',
        'getter-return': 'error',
        'global-require': 'error',
        'grouped-accessor-pairs': ['error', 'getBeforeSet'],
        'guard-for-in': 'error',
        'handle-callback-err': ['error', '^.*(e|E)rr'],
        'id-denylist': ['error', 'e'],
        'id-length': ['error', {
            min: ID_LENGTH,
            exceptions: [
                'fs',
                'id'
            ]
        }],
        'id-match': 'off',
        'implicit-arrow-linebreak': 'error',
        'indent': ['error', INDENT, { SwitchCase: 1 }],
        'init-declarations': ['error', 'always'],
        'jsx-quotes': 'error',
        'key-spacing': 'error',
        'keyword-spacing': 'error',
        'line-comment-position': 'error',
        'linebreak-style': 'error',
        'lines-around-comment': ['error', { beforeBlockComment: false }],
        'lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],
        'max-classes-per-file': ['error', 1],
        'max-depth': 'error',
        'max-len': 'off',
        'max-lines': ['error', {
            max: MAX_FILE_LINES,
            skipBlankLines: true,
            skipComments: true
        }],
        'max-lines-per-function': ['error', {
            IIFEs: true,
            max: MAX_FUNC_LINES,
            skipBlankLines: true,
            skipComments: true
        }],
        'max-nested-callbacks': ['error', MAX_NESTED_CALLBACKS],
        'max-params': ['error', MAX_PARAMS],
        'max-statements-per-line': 'error',
        'max-statements': 'off',
        'multiline-comment-style': ['warn', 'separate-lines'],
        'multiline-ternary': ['error', 'never'],
        'new-cap': ['error', { capIsNew: false }],
        'new-parens': 'error',
        'newline-per-chained-call': 'off',
        'no-alert': 'error',
        'no-array-constructor': 'error',
        'no-async-promise-executor': 'error',
        'no-await-in-loop': 'error',
        'no-bitwise': 'error',
        'no-buffer-constructor': 'warn',
        'no-caller': 'error',
        'no-case-declarations': 'error',
        'no-catch-shadow': 'off',
        'no-class-assign': 'error',
        'no-compare-neg-zero': 'error',
        'no-cond-assign': 'error',
        'no-confusing-arrow': ['error', { allowParens: true }],
        'no-console': 'warn',
        'no-const-assign': 'error',
        'no-constant-condition': 'error',
        'no-constructor-return': 'error',
        'no-continue': 'error',
        'no-control-regex': 'error',
        'no-debugger': 'error',
        'no-delete-var': 'error',
        'no-div-regex': 'error',
        'no-dupe-args': 'error',
        'no-dupe-class-members': 'error',
        'no-dupe-else-if': 'error',
        'no-dupe-keys': 'error',
        'no-duplicate-case': 'error',
        'no-duplicate-imports': 'error',
        'no-else-return': 'error',
        'no-empty-character-class': 'error',
        'no-empty-function': 'error',
        'no-empty-pattern': 'error',
        'no-empty': 'error',
        'no-eq-null': 'error',
        'no-eval': 'error',
        'no-ex-assign': 'error',
        'no-extend-native': 'error',
        'no-extra-bind': 'error',
        'no-extra-boolean-cast': 'error',
        'no-extra-label': 'error',
        'no-extra-parens': 'error',
        'no-extra-semi': 'error',
        'no-fallthrough': 'error',
        'no-floating-decimal': 'error',
        'no-func-assign': 'error',
        'no-global-assign': 'error',
        'no-implicit-coercion': 'error',
        'no-implicit-globals': 'error',
        'no-implied-eval': 'error',
        'no-import-assign': 'error',
        'no-inline-comments': 'error',
        'no-inner-declarations': 'error',
        'no-invalid-regexp': 'error',
        'no-invalid-this': 'error',
        'no-irregular-whitespace': 'error',
        'no-iterator': 'error',
        'no-label-var': 'error',
        'no-labels': 'error',
        'no-lone-blocks': 'error',
        'no-lonely-if': 'error',
        'no-loop-func': 'error',
        'no-loss-of-precision': 'error',
        'no-magic-numbers': ['error', {
            enforceConst: true,
            ignore: [0, 1]
        }],
        'no-misleading-character-class': 'error',
        'no-mixed-operators': 'warn',
        'no-mixed-requires': 'error',
        'no-mixed-spaces-and-tabs': 'error',
        'no-multi-assign': 'error',
        'no-multi-spaces': 'error',
        'no-multi-str': 'error',
        'no-multiple-empty-lines': 'error',
        'no-negated-condition': 'error',
        'no-nested-ternary': 'warn',
        'no-new-func': 'error',
        'no-new-object': 'error',
        'no-new-require': 'error',
        'no-new-symbol': 'error',
        'no-new-wrappers': 'error',
        'no-new': 'error',
        'no-obj-calls': 'error',
        'no-octal-escape': 'error',
        'no-octal': 'error',
        'no-param-reassign': 'error',
        'no-path-concat': 'error',
        'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],
        'no-promise-executor-return': 'error',
        'no-process-env': 'error',
        'no-process-exit': 'error',
        'no-proto': 'error',
        'no-prototype-builtins': 'error',
        'no-redeclare': ['error', { builtinGlobals: false }],
        'no-regex-spaces': 'error',
        'no-restricted-exports': 'off',
        'no-restricted-globals': 'off',
        'no-restricted-imports': 'off',
        'no-restricted-modules': 'off',
        'no-restricted-properties': 'off',
        'no-restricted-syntax': 'off',
        'no-return-assign': 'error',
        'no-return-await': 'error',
        'no-script-url': 'error',
        'no-self-assign': 'error',
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-setter-return': 'error',
        'no-shadow-restricted-names': 'error',
        'no-shadow': 'error',
        'no-sparse-arrays': 'error',
        'no-sync': 'error',
        'no-tabs': 'error',
        'no-template-curly-in-string': 'error',
        'no-ternary': 'off',
        'no-this-before-super': 'error',
        'no-throw-literal': 'error',
        'no-trailing-spaces': 'error',
        'no-undef-init': 'error',
        'no-undef': 'error',
        'no-undefined': 'error',
        'no-underscore-dangle': 'off',
        'no-unexpected-multiline': 'error',
        'no-unmodified-loop-condition': 'error',
        'no-unneeded-ternary': 'warn',
        'no-unreachable': 'error',
        'no-unreachable-loop': 'error',
        'no-unsafe-finally': 'error',
        'no-unsafe-negation': ['error', { enforceForOrderingRelations: true }],
        'no-unused-expressions': ['error', {
            allowShortCircuit: true,
            allowTernary: true
        }],
        'no-unused-labels': 'error',
        'no-unused-vars': 'error',
        'no-use-before-define': 'error',
        'no-useless-backreference': 'error',
        'no-useless-call': 'error',
        'no-useless-catch': 'error',
        'no-useless-computed-key': 'error',
        'no-useless-concat': 'error',
        'no-useless-constructor': 'error',
        'no-useless-escape': 'error',
        'no-useless-rename': 'error',
        'no-useless-return': 'error',
        'no-var': 'error',
        'no-void': 'error',
        'no-warn-comments': 'off',
        'no-whitespace-before-property': 'error',
        'no-with': 'error',
        'nonblock-statement-body-position': 'off',
        'object-curly-newline': ['error', { consistent: true }],
        'object-curly-spacing': ['error', 'always'],
        'object-property-newline': 'error',
        'object-shorthand': 'off',
        'one-var-declaration-per-line': 'error',
        'one-var': ['error', 'never'],
        'operator-assignment': 'error',
        'operator-linebreak': ['error', 'none'],
        'padded-blocks': ['error', 'never'],
        'padding-line-between-statements': [
            'error',
            {
                blankLine: 'always',
                prev: 'directive',
                next: '*'
            },
            {
                blankLine: 'any',
                prev: 'directive',
                next: 'directive'
            },
            {
                blankLine: 'always',
                prev: ['const', 'let', 'var'],
                next: ['const', 'let', 'var']
            },
            {
                blankLine: 'any',
                prev: ['const', 'let', 'var'],
                next: ['const', 'let', 'var']
            },
            {
                blankLine: 'always',
                prev: '*',
                next: 'return'
            }
        ],
        'prefer-arrow-callback': 'error',
        'prefer-named-capture-group': 'error',
        'prefer-const': 'error',
        'prefer-destructuring': [
            'error',
            {
                array: true,
                object: true
            },
            { enforceForRenamedProperties: false }
        ],
        'prefer-exponentiation-operator': 'warn',
        'prefer-numeric-literals': 'off',
        'prefer-object-spread': 'warn',
        'prefer-promise-reject-errors': 'error',
        'prefer-regex-literals': 'error',
        'prefer-rest-params': 'error',
        'prefer-spread': 'warn',
        'prefer-template': 'error',
        'quote-props': ['error', 'consistent-as-needed'],
        'quotes': ['error', 'single', { allowTemplateLiterals: true }],
        'radix': 'error',
        'react/boolean-prop-naming': 2,
        'react/button-has-type': 2,
        'react/default-props-match-prop-types': [2, { allowRequiredDefaults: false }],
        'react/destructuring-assignment': 0,
        'react/display-name': 0,
        'react/forbid-component-props': 2,
        'react/forbid-dom-props': 0,
        'react/forbid-elements': 0,
        'react/forbid-foreign-prop-types': 2,
        'react/forbid-prop-types': [2,
            {
                forbid: ['any', 'array', 'object'],
                checkContextTypes: true,
                checkChildContextTypes: true
            }],
        'react/jsx-boolean-value': [2, 'never'],
        'react/jsx-child-element-spacing': 0,
        'react/jsx-closing-bracket-location': [2, 'line-aligned'],
        'react/jsx-closing-tag-location': 2,
        'react/jsx-curly-spacing': [2, 'never', { allowMultiline: true }],
        'react/jsx-equals-spacing': [2, 'never'],
        'react/jsx-filename-extension': [2, { extensions: ['.js', '.jsx'] }],
        'react/jsx-first-prop-new-line': [2, 'multiline-multiprop'],
        'react/jsx-handler-names': [2,
            {
                eventHandlerPrefix: 'handle',
                eventHandlerPropPrefix: 'on'
            }],
        'react/jsx-indent': [2, 4],
        'react/jsx-indent-props': [2, 4],
        'react/jsx-key': 2,
        'react/jsx-max-depth': 0,
        'react/jsx-max-props-per-line': [2,
            { maximum: 2,
                when: 'multiline' }],
        'react/jsx-no-bind': [2,
            {
                ignoreRefs: true,
                allowArrowFunctions: true,
                allowBind: false
            }],
        'react/jsx-no-comment-textnodes': 2,
        'react/jsx-no-duplicate-props': 2,
        'react/jsx-no-literals': 0,
        'react/jsx-no-target-blank': 2,
        'react/jsx-one-expression-per-line': 0,
        'react/jsx-no-undef': 2,
        'react/jsx-curly-brace-presence': [2,
            { props: 'never',
                children: 'never' }],
        'react/jsx-pascal-case': [2, { allowAllCaps: true }],
        'react/jsx-sort-default-props': 0,
        'react/jsx-sort-props': 0,
        'react/jsx-space-before-closing': 0,
        'react/jsx-tag-spacing': [2,
            {
                closingSlash: 'never',
                beforeSelfClosing: 'always',
                afterOpening: 'never',
                beforeClosing: 'never'
            }],
        'react/jsx-uses-react': 2,
        'react/jsx-uses-vars': 2,
        'react/jsx-wrap-multilines': [2,
            {
                declaration: 'parens-new-line',
                assignment: 'parens-new-line',
                return: 'parens-new-line',
                arrow: 'ignore',
                condition: 'parens-new-line',
                logical: 'parens-new-line',
                prop: 'parens-new-line'
            }],
        'react/no-access-state-in-setstate': 2,
        'react/no-array-index-key': 2,
        'react/no-children-prop': 2,
        'react/no-danger': 2,
        'react/no-danger-with-children': 2,
        'react/no-deprecated': 2,
        'react/no-did-mount-set-state': 2,
        'react/no-did-update-set-state': 2,
        'react/no-direct-mutation-state': 2,
        'react/no-find-dom-node': 2,
        'react/no-is-mounted': 2,
        'react/no-multi-comp': [2, { ignoreStateless: true }],
        'react/no-set-state': 0,
        'react/no-string-refs': 2,
        'react/no-redundant-should-component-update': 2,
        'react/no-render-return-value': 2,
        'react/no-this-in-sfc': 2,
        'react/no-typos': 2,
        'react/no-unescaped-entities': 2,
        'react/no-unknown-property': 2,
        'react/no-unused-prop-types': [2, { skipShapeProps: true }],
        'react/no-unused-state': 2,
        'react/no-will-update-set-state': 2,
        'react/prefer-es6-class': [2, 'always'],
        'react/prefer-stateless-function': 2,
        'react/prop-types': [2, { skipUndeclared: false }],
        'react/react-in-jsx-scope': 2,
        'react/require-default-props': 2,
        'react/require-optimization': 0,
        'react/require-render-return': 2,
        'react/self-closing-comp': 2,
        'react/sort-comp': [2,
            {
                order: ['static-methods', 'instance-variables', 'lifecycle', 'instance-methods', 'everything-else', '/^on.+$/', 'rendering'],
                groups: {
                    lifecycle: ['displayName', 'propTypes', 'contextTypes', 'childContextTypes', 'mixins', 'statics', 'defaultProps', 'constructor', 'getDefaultProps', 'getInitialState', 'state', 'getChildContext', 'componentWillMount', 'componentDidMount', 'componentWillReceiveProps', 'shouldComponentUpdate', 'componentWillUpdate', 'componentDidUpdate', 'componentWillUnmount'],
                    rendering: ['/^render.+$/', 'render']
                }
            }],
        'react/sort-prop-types': 0,
        'react/style-prop-object': 2,
        'react/void-dom-elements-no-children': 2,
        'require-atomic-updates': 'error',
        'require-await': 'error',
        'require-jsdoc': 'off',
        'require-unicode-regexp': 'warn',
        'require-yield': 'off',
        'rest-spread-spacing': 'error',
        'semi-spacing': 'error',
        'semi-style': 'error',
        'semi': 'error',
        'sort-imports': ['error', { ignoreMemberSort: true }],
        'sort-keys': 'off',
        'sort-vars': 'off',
        'space-before-blocks': 'error',
        'space-before-function-paren': ['error', 'never'],
        'space-in-parens': ['error', 'never'],
        'space-infix-ops': 'error',
        'space-unary-ops': 'error',
        'spaced-comment': 'error',
        'strict': ['error', 'global'],
        'switch-colon-spacing': 'error',
        'symbol-description': 'error',
        'template-curly-spacing': 'error',
        'template-tag-spacing': ['error', 'never'],
        'unicode-bom': 'error',
        'use-isnan': 'error',
        'valid-jsdoc': 'off',
        'valid-typeof': ['error', { requireStringLiterals: true }],
        'vars-on-top': 'error',
        'wrap-iife': ['error', 'outside'],
        'wrap-regex': 'error',
        'yield-star-spacing': 'off',
        'yoda': 'error'
    },
    settings: {
        react: {
            createClass: "createReactClass",
            pragma: "React",
            fragment: "Fragment",
            version: "detect",
            flowVersion: "0.53"
        },
        propWrapperFunctions: [
            'forbidExtraProps',
            {
                property: "freeze",
                object: "Object"
            },
            {
                property: "myFavoriteWrapper"
            }
        ],
        linkComponents: [
            'Hyperlink',
            {
                name: "Link",
                linkAttribute: "to"
            }
        ]
      }
};
